<!DOCTYPE html5>
<head>
	<meta charset='utf-8'>
	<link href='styles.css' rel='stylesheet'>
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.2.0/styles/default.min.css" integrity="sha512-3xLMEigMNYLDJLAgaGlDSxpGykyb+nQnJBzbkQy2a0gyVKL2ZpNOPIj1rD8IPFaJbwAgId/atho1+LBpWu5DhA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
	<style>
#cont { 
	display: grid;
	grid-template-columns: 2fr 3fr;
}

.width100 {
	width: 100%;
}
	</style>
</head>

<body>
	<a href='index.html'>BACK</a>
	<h1>Maze generation algorithms</h2>
	<p>On this page three different algorithms are demonstrated for generating mazes and each maze is solved by a recursive backtracking algorithm.</p>


	<h2>Kruskal's method</h2>
	<p style='border-left: 5px solid blue; padding-left: 10px;'>
	Kruskal's method is normally used for constructing a minimal spanning tree for a graph. It can also be used for making a maze. Each cell starts with no open doors aka edges. Pick an edge at random and check if there already exists a route connecting both rooms connected by this edge. If not create a connection between both rooms. Dont visit the edge again.</p>
	<div id='cont'>
		<canvas style='border: 4px double blue;' id='kruskal_canvas' width='500' height='480'> </canvas>
		<div id='kruskalsrc'></div>
	</div>


	<h2>Recursive backtracking</h2>
	<p style='border-left: 5px solid green; padding-left: 10px;'>Start at a preferred location. For all available edges from this current position who are not already connected to another cell/room pick one at random and create an edge between the cells. Mark this cell as visited and current. Repeat the previous step. Keep track of all previous room visited. When no edges are available backtrack into one of the rooms visited and which still has available edges for connecting to unvisited rooms.</p>
	<div id='cont'>
		<canvas style='border: 4px double green;' id='backtracking_canvas' width='500' height='480'> </canvas>
		<div id='recbacksrc'></div>
	</div>


	<h2>Division method</h2>
	<p style='border-left: 5px solid yellow; padding-left: 10px;'>Split the grid into two halves connected by a single edge. Repeat the process for both rooms until the room becomes too small for division. </p>
	<div id='cont'>
		<canvas style='border: 4px double yellow;' id='division_canvas' width='500' height='480'> </canvas>
		<div id='divmethsrc'></div>
	</div>


	<script type='module' src='mazes.js'>No javascript</script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.2.0/highlight.min.js" integrity="sha512-MinqHeqca99q5bWxFNQEQpplMBFiUNrEwuuDj2rCSh1DgeeTXUgvgYIHZ1puBS9IKBkdfLMSk/ZWVDasa3Y/2A==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
</body>

