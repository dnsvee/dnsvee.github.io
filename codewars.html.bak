<!-- Zebra/Einstein puzzle from Rosettacode -->
<html>
	<head>
		<meta title='CodeWars problems solutions'>
		<link rel='stylesheet' href='styles.css'>
		<style>
		</style>
	</head>
	<body>
		<a id='back' href='/index.html'>Back</a>
		<h1>Solutions to problems from CodeWars</h3>
		<p><a href='https://codewars.com/'>CodeWars</a> is another website featuring programming challenges where you can. Solutions are checked by running multiple test cases. Here are some of my solutions to a subset of problems I solved. Unfortunately you can't directly link to a solution and have it tested. I will present the source and link to the problem.</p>
		<p><a href='https://leetcode.com/problems/divide-two-integers/discuss/1442656/python-solution-using-recursion'>29: Divide Two Numbers (Python)</a><p>
		
		<p><a href=''></a>
		<pre><code>
		import java.util.*;
import java.io.*;

public class SimpleAssembler {  
  static Map<String, Integer> Regs;
  
  static public int getValueOrRegister(String s) {
      if (Character.isLetter(s.charAt(0))) 
        return Regs.get(s);
    
      return Integer.valueOf(s);
  }
  
  public static Map<String, Integer> interpret(String[] program){
    int ip = 0;

    Regs = new HashMap<String, Integer>();
    while (ip < program.length) {
      String[] strs = program[ip].split("\\s");
      
      switch (strs[0]) {
        case "mov":
          Regs.put(strs[1], getValueOrRegister(strs[2]));
          ip++;
          break;
        case "inc":
          Regs.put(strs[1], Regs.get(strs[1]) + 1);
          ip++;
          break;
        case "dec":
          Regs.put(strs[1], Regs.get(strs[1]) - 1);
          ip++;
          break;
        case "jnz":
          if (getValueOrRegister(strs[1]) != 0)
            ip += getValueOrRegister(strs[2]);
          else
            ip++;
          
          break;
        default:
          throw new RuntimeException("oh no!");
      }
    }
    
    return Regs;
  }
}
		</code></pre>
		<p>

		
		

	</body>
</html>
